{"version":3,"sources":["components/previewer/previewer-component.jsx","components/text-area/text-area-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Previewer","props","state","id","plugins","gfm","children","this","data","Component","TextArea","handleChange","event","setState","input","target","value","onChange","type","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAoBeA,E,kDAdb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,qBAAKC,GAAG,UAAR,SACE,cAAC,IAAD,CAAeC,QAAS,CAACC,KAAMC,SAAUC,KAAKN,MAAMO,a,GATpCC,aCgCTC,G,yDAjCb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAORU,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,MAAOF,EAAMG,OAAOC,SARtB,EAAKd,MAAQ,CACXY,MACE,4vBAJa,E,qDAejB,OACE,8BAGE,sBAAKX,GAAG,SAAR,UACE,0BACEA,GAAG,SACHa,MAAOT,KAAKL,MAAMY,MAClBG,SAAUV,KAAKI,aACfO,KAAK,aAEP,cAAC,EAAD,CAAWV,KAAMD,KAAKL,MAAMY,iB,GA3BfL,cCQRU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a9a89ce8.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"./previewer-styles.scss\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nclass Previewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div id=\"preview\">\n        <ReactMarkdown plugins={[gfm]} children={this.props.data} />\n      </div>\n    );\n  }\n}\n\nexport default Previewer;\n","import { Component } from \"react\";\nimport Previewer from \"../previewer/previewer-component\";\nimport \"./text-area-styles.scss\";\nclass TextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input:\n        \" # Write your markdown here! \\r\\n ## or here \\r\\n [hey](google.com) \\r\\n ```javascript \\r\\n var s = 'JavaScript syntax highlighting'; \\r\\n alert(s); \\r\\n ``` \\r\\n Inline `code` has `back-ticks around` it. \\r\\n 1. First ordered list item \\r\\n 2. Another item \\r\\n ⋅⋅* Unordered sub-list. \\r\\n1. Actual numbers don't matter, just that it's a number \\r\\n ⋅⋅1. Ordered sub-list \\r\\n 4. And another item. \\r\\n > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.  \\r\\n ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png 'Logo Title Text 1')\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      input: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <h1>Markdown</h1>\n        <h1 id=\"second\">Preview</h1> */}\n        <div id=\"parent\">\n          <textarea\n            id=\"editor\"\n            value={this.state.input}\n            onChange={this.handleChange}\n            type=\"textarea\"\n          ></textarea>\n          <Previewer data={this.state.input} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextArea;\n","import \"./App.css\";\nimport TextArea from \"./components/text-area/text-area-component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TextArea />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}